@use "../abstracts/variables" as v;
@use "../abstracts/mixins" as m;
@use "../abstracts/functions" as f;
@use "sass:color";
@use "sass:map";
.btn {
  text-transform: uppercase;
  padding: 0.5rem 1.6rem;
  min-height: 2.3rem;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.3s;
  border-radius: 2rem;
  max-width: 20rem;
  width: 100%;
  position: relative;
  overflow: hidden;
  z-index: 2;
  @include m.respond(sm) {
    width: auto;
  }

  &__icon-wrapper {
    overflow: hidden;
    margin-left: 1rem;
    margin-right: -1.1rem;
    border-radius: 50%;
    display: none;
    @include m.respond(lg) {
      display: block;
    }
    svg {
      mix-blend-mode: difference;
      background-color: map.get(v.$colors, sand);
      stroke: black;
    }
  }

  &:focus,
  &:hover {
    outline: none;
    text-decoration: none;
  }
  &:active {
    transform: translateY(2px);
  }

  &__umber {
    color: map.get(v.$colors, umber);
    background-color: transparent;
    border: 1px solid map.get(v.$colors, umber);

    &::before {
      content: "";
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      z-index: -1;
      inset: 0;
      transform: translateX(-100%);
      transition: transform 0.3s;
      background-color: map.get(v.$colors, umber);
    }

    &:hover {
      color: map.get(v.$colors, white);
      &:before {
        transform: translateX(0);
      }
    }
    &:focus {
      color: map.get(v.$colors, white);
      &:before {
        transform: translateX(0);
        opacity: 0.9;
      }
    }
  }

  &__white {
    color: f.get-color(white, 0.3);
    background-color: transparent;
    letter-spacing: 0.1rem;
    font-weight: 100;
    height: 2rem;

    &::before {
      content: "";
      display: block;
      position: absolute;
      width: 50%;
      height: 0.1rem;
      z-index: -1;
      bottom: 0.2rem;
      left: 0;
      transform: translateX(-100%);
      transition: all 0.3s;
      background-color: f.get-color(white, 0.3);
    }

    &:hover {
      color: map.get(v.$colors, white);
      font-size: 1.1rem;
      &:before {
        transform: translateX(50%);
      }
    }
    &:active {
      color: map.get(v.$colors, umber);
      &:before {
        transform: translateX(0);
        opacity: 0.9;
      }
    }
  }
  &__black {
    color: map.get(v.$colors, transparent);
    border: 1px solid map.get(v.$colors, black);
    background-color: black;

    &::before {
      content: "";
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      z-index: -1;
      inset: 0;
      transform: translateX(-100%);
      transition: transform 0.3s;
      background-color: map.get(v.$colors, sand);
    }

    &:hover {
      color: map.get(v.$colors, black);
      &:before {
        transform: translateX(0);
      }
    }
    &:focus {
      color: map.get(v.$colors, black);
      &:before {
        transform: translateX(0);
        opacity: 0.9;
      }
    }
  }
  &__text {
    color: map.get(v.$colors, umber);
    overflow: hidden;
    font-weight: 600;
    letter-spacing: 0.1rem;
    transition: color 0.3s;
    position: relative;
    &::before {
      content: "";
      display: block;
      position: absolute;
      width: 50%;
      height: 0.1rem;
      z-index: -1;
      bottom: 0;
      left: 0;
      transform: translateX(-100%);
      transition: all 0.3s;
      background-color: f.get-color(umber, 0.3);
    }

    &:hover {
      color: map.get(v.$colors, black);
      &:before {
        transform: translateX(50%);
      }
    }
    &:active {
      color: map.get(v.$colors, black);

      &:before {
        transform: scaleX(200%) translateX(25%);
      }
    }
  }
  &__submit {
    width: 12rem;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 44px;

    &-loading {
      pointer-events: none;
      cursor: not-allowed;
      background-color: map.get(v.$colors, umber);
      color: map.get(v.$colors, white);
      border: none;
      &:hover {
        background-color: map.get(v.$colors, umber);
      }
    }
  }
}
